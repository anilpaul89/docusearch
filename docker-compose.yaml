version: "3.7"
services:
  elasticsearch-docu:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
    container_name: elasticsearch-docu
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data-volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
  zookeeper-docu:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    restart: always
    container_name: zookeeper-docu
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker-docu:
    image: confluentinc/cp-kafka
    hostname: broker
    restart: always
    container_name: broker-docu
    depends_on:
      - zookeeper-docu
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  api:
    build: api/.
    depends_on:
      - broker-docu
      - elasticsearch-docu
    ports:
      - "9000:9000"
  extractor:
    build: extractor/.
    depends_on:
      - broker-docu
    ports:
      - "9001:9001"
  client:
    build: client/.
    ports:
      - "3000:3000"
volumes:
  elasticsearch-data-volume:
    driver: local